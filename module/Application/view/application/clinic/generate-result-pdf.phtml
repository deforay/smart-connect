<?php

use Laminas\Session\Container;
use Application\Service\CommonService;
use setasign\Fpdi\Tcpdf\Fpdi;

$alertContainer = new Container('alert');
$common = new CommonService();
$alertContainer->aliasPage = 1;
$alertContainer->nbPages = count($sampleResult);
class MYPDF extends TCPDF
{
     // Page header
     public $heading = '';
     public $logo = '';
     public $lab = '';
     public $facilityLogo = '';
     public $facilityLogoPosition = '';

     public function setSchemeName($heading, $logo, $lab, $facilityLogo, $facilityLogoPosition)
     {
          $this->heading = $heading;
          $this->logo = $logo;
          $this->facilityLogo = $facilityLogo;
          $this->facilityLogoPosition = $facilityLogoPosition;
          $this->lab = $lab;
     }

     public function Header()
     {
          // // Logo
          // $this->Image($this->facilityLogo,40, 13, $this->facilityLogoPosition, '', '', '', 'T', false, 300, '', false, false, 0, false, false, false);
          // //Set font
          // $this->SetFont('helvetica', 'B', 9);
          // $this->writeHTMLCell(80,0,10,28,strtoupper($this->lab), 0, 0, 0, true, 'C', true);
          // $style2 = array('width' => 0.5, 'cap' => 'butt', 'join' => 'miter', 'dash' => 0, 'color' => array(0, 0, 0));
          // //$this->Line(5, 10, 5, 30, $style2);
          // $this->Line(90, 36, 90, 10, $style2);

          //$this->SetFont('helvetica', '', 18);
          //$this->writeHTMLCell(0,0,10,18,'VIRAL LOAD', 0, 0, 0, true, 'C', true);
          $this->Image($this->logo, 20, 13, 15, '', '', '', 'T', false, 300, '', false, false, 0, false, false, false);
          if (trim($this->lab) != '') {
               $this->SetFont('helvetica', 'B', 20);
               $this->writeHTMLCell(0, 0, 5, 18, strtoupper($this->lab), 0, 0, 0, true, 'C', true);
          }
          $this->writeHTMLCell(0, 0, 10, 36, '<hr>', 0, 0, 0, true, 'C', true);
     }

     // Page footer
     public function Footer()
     {
          $alertContainer = new Container('alert');
          // Position at 15 mm from bottom
          $this->SetY(-15);
          // Set font
          $this->SetFont('helvetica', '', 7);
          // Page number
          $this->Cell(0, 10, '.... Report generated by Viral Load Dashboard ....', 0, false, 'C', 0, '', 0, false, 'T', 'M');
     }
}
class PdfConcat extends Fpdi
{
     var $files = [];

     public function setFiles($files)
     {
          $this->files = $files;
     }

     public function concat()
     {
          foreach ($this->files as $file) {
               $pagecount = $this->setSourceFile($file);
               for ($i = 1; $i <= $pagecount; $i++) {
                    $tplidx = $this->ImportPage($i);
                    $s = $this->getTemplatesize($tplidx);
                    $this->AddPage('P', array($s['w'], $s['h']));
                    $this->useTemplate($tplidx);
               }
          }
     }
}
$resultFilename = '';
if (sizeof($sampleResult) > 0) {
     //set logo
     $defaultLogo = APPLICATION_PATH . DIRECTORY_SEPARATOR . 'assets' . DIRECTORY_SEPARATOR . 'img' . DIRECTORY_SEPARATOR . 'default-logo.png';
     if (isset($config['logo']) && trim($config['logo']) != "" && file_exists(UPLOAD_PATH . DIRECTORY_SEPARATOR . "logo" . DIRECTORY_SEPARATOR . $config['logo'])) {
          $defaultLogo = APPLICATION_PATH . DIRECTORY_SEPARATOR . 'uploads' . DIRECTORY_SEPARATOR . 'logo' . DIRECTORY_SEPARATOR . $config['logo'];
     }
     $page = 1;
     $pages = [];
     foreach ($sampleResult as $result) {
          if (!isset($result['labName'])) {
               $result['labName'] = '';
          }
          $alertContainer->aliasPage = $page;
          // create new PDF document
          $pdf = new MYPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);
          //set facility logo
          $facilityLogo = APPLICATION_PATH . DIRECTORY_SEPARATOR . 'assets' . DIRECTORY_SEPARATOR . 'img' . DIRECTORY_SEPARATOR . 'default-logo.png';
          $facilityLogoPosition = '15';
          if (isset($result['facility_logo']) && trim($result['facility_logo']) != "" && file_exists(UPLOAD_PATH . DIRECTORY_SEPARATOR . "facility" . DIRECTORY_SEPARATOR . $result['facility_id'] . DIRECTORY_SEPARATOR . $result['facility_logo'])) {
               $facilityLogo = APPLICATION_PATH . DIRECTORY_SEPARATOR . 'uploads' . DIRECTORY_SEPARATOR . 'facility' . DIRECTORY_SEPARATOR . $result['facility_id'] . DIRECTORY_SEPARATOR . $result['facility_logo'];
               $facilityLogoPosition = '25';
          }
          $pdf->setSchemeName($config['header'], $defaultLogo, $result['labName'], $facilityLogo, $facilityLogoPosition);
          // set document information
          $pdf->SetCreator(PDF_CREATOR);
          $pdf->SetAuthor('VL Dashboard');
          $pdf->SetTitle('Viral Load Result');

          // set default header data
          $pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE, PDF_HEADER_STRING);

          // set header and footer fonts
          $pdf->setHeaderFont(array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
          $pdf->setFooterFont(array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

          // set default monospaced font
          $pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

          // set margins
          //$pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_RIGHT);
          //$pdf->SetHeaderMargin(PDF_MARGIN_HEADER);
          //$pdf->SetFooterMargin(PDF_MARGIN_FOOTER);

          // set auto page breaks
          $pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);

          // set image scale factor
          $pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

          // set font
          $pdf->SetFont('helvetica', '', 10);

          $pdf->AddPage();
          $pdf->SetY(40, true, false);

          $patientFirstName = '';
          $patientLastName = '';
          $patientMobileNumber = '';

          //set patient details


          if (isset($result['patient_first_name']) && $result['patient_first_name'] != NULL && trim($result['patient_first_name']) != '') {
               $patientFirstName = ucwords($result['patient_first_name']);
          }
          if (isset($result['patient_last_name']) && $result['patient_last_name'] != NULL && trim($result['patient_last_name']) != '') {
               $patientLastName = ucwords($result['patient_last_name']);
          }

          if (isset($result['patient_mobile_number']) && $result['patient_mobile_number'] != NULL && trim($result['patient_mobile_number']) != '') {
               $patientMobileNumber = $result['patient_mobile_number'];
          }
          //set facility details
          if (!isset($result['facility_name']) || $result['facility_name'] == NULL || trim($result['facility_name']) == '') {
               $result['facility_name'] = '';
          }
          if (!isset($result['facility_code']) || $result['facility_code'] == NULL || trim($result['facility_code']) == '') {
               $result['facility_code'] = '';
          }
          if (!isset($result['provinceName']) || $result['provinceName'] == NULL || trim($result['provinceName']) == '') {
               $result['provinceName'] = '';
          }
          if (!isset($result['districtName']) || $result['districtName'] == NULL || trim($result['districtName']) == '') {
               $result['districtName'] = '';
          }
          //set gender
          if (!isset($result['patient_gender']) || $result['patient_gender'] == NULL || trim($result['patient_gender']) == '') {
               $result['patient_gender'] = 'not reported';
          }
          //set Age
          $age = 'Unknown';
          if (isset($result['patient_dob']) && $result['patient_dob'] != NULL && trim($result['patient_dob']) != '' && $result['patient_dob'] != '0000-00-00' && $result['patient_dob'] != '1970-01-01') {
               $todayDate = strtotime(date('Y-m-d'));
               $dob = strtotime($result['patient_dob']);
               $difference = $todayDate - $dob;
               $seconds_per_year = 60 * 60 * 24 * 365;
               $age = round($difference / $seconds_per_year);
          } elseif (isset($result['patient_age_in_years']) && $result['patient_age_in_years'] != NULL && trim($result['patient_age_in_years']) != '' && trim($result['patient_age_in_years']) > 0) {
               $age = " (" . $result['patient_age_in_years'] . ")";
          } elseif (isset($result['patient_age_in_months']) && $result['patient_age_in_months'] != NULL && trim($result['patient_age_in_months']) != '' && trim($result['patient_age_in_months']) > 0) {
               if ($result['patient_age_in_months'] > 1) {
                    $age = $result['patient_age_in_months'] . ' months';
               } else {
                    $age = $result['patient_age_in_months'] . ' month';
               }
          }
          //sample collection date
          $sampleCollectionDate = 'Not Reported';
          $sampleCollectionTime = '';
          if (isset($result['sample_collection_date']) && !empty($result['sample_collection_date'])) {
               $sampleCollectionDate = $this->humanReadableDateFormat($result['sample_collection_date'] ?? '');
          }
          $sampleTestDate = 'Not Reported';
          if (isset($result['sample_tested_datetime']) && !empty($result['sample_tested_datetime'])) {
               $sampleTestDate = $this->humanReadableDateFormat($result['sample_tested_datetime'] ?? '');
          }

          $approvedDate = '';
          if (isset($result['result_approved_datetime']) && !empty($result['result_approved_datetime'])) {
               $approvedDate = $this->humanReadableDateFormat($result['result_approved_datetime'] ?? '');
          }


          //last viral load test date
          $lastViralLoadDate = '';
          if (isset($result['last_viral_load_date']) && $result['last_viral_load_date'] != NULL && trim($result['last_viral_load_date']) != '' && $result['last_viral_load_date'] != '0000-00-00' && $result['last_viral_load_date'] != '1970-01-01') {
               $lastViralLoadDate = $this->humanReadableDateFormat($result['last_viral_load_date']);
          }
          $resultApprovedBy  = '';
          if (isset($result['approvedBy']) && trim($result['approvedBy']) != '') {
               $resultApprovedBy = ucwords($result['approvedBy']);
          }
          $html = '';
          $html .= '';


          $html .= '<table style="padding:0px 2px 2px 2px;">';

          $html .= '<tr>';
          $html .= '<td></td>
          <td style="font-weight:bold;text-align:center;">' . $this->translate("Laboratory Result") . '</td>
          <td></td>';
          $html .= '</tr>';
          $html .= '<tr>';


          $html .= '<td style="font-size:11px;">' . $patientFirstName . " " . $patientLastName . '</td>

          <td style="font-size:11px;"></td>
          <td style="font-size:11px;"><strong>' . $this->translate("Collected") . '</strong> : ' . $sampleCollectionDate . '</td>';
          $html .= '</tr>';
          $html .= '<tr>';
          $html .= '<td style="font-size:11px;">' . $result['labName'] . '</td>
          <td style="font-size:11px;"></td>
          <td style="font-size:11px;"><strong>' . $this->translate("Sample ID") . '</strong> : ' . $result['sample_code'] . '</td>';
          $html .= '</tr>';
          $html .= '<tr>';
          $html .= '<td style="font-size:11px;"></td>
          <td style="font-size:11px;"></td>
          <td style="font-size:11px;"></td>';
          $html .= '</tr>';
          $html .= '<tr>';
          $html .= '<td style="font-size:11px;"><strong>' . $this->translate("Referred by") . '</strong> : ' . ($result['request_clinician_name']) . '</td>
          <td style="font-size:11px;"></td>
          <td style="font-size:11px;"><strong>' . $this->translate("Specimen") . '</strong> : ' . ucwords($result['sample_name']) . '</td>';
          $html .= '</tr>';
          $html .= '<tr>';
          $html .= '<td style="font-size:11px;">' . $result['provinceName'] . ' | ' . $result['districtName'] . '</td>
          <td style="font-size:11px;"></td>
          <td style="font-size:11px;"><strong>' . $this->translate("Issued") . '</strong> : ' . $sampleTestDate . '</td>';
          $html .= '</tr>';
          $html .= '<tr>';
          $html .= '<td colspan="3" style="line-height:11px;font-size:11px;text-align:left;"></td>';
          $html .= '</tr>';
          $html .= '<tr>';
          $html .= '<td colspan="3" style="line-height:21px;font-size:11px;font-weight:bold;text-align:left;">' . $this->translate("HIV Viral Load") . '</td>';
          $html .= '</tr>';

          $html .= '<tr>';
          $html .= '<td colspan="3" style="text-indent:10px;line-height:18px;font-size:11px;text-align:left;letter-spacing:1px;">' . $this->translate("Date of ART Regimen") . ' ................... ' . $result['date_of_initiation_of_current_regimen'] . '</td>';
          $html .= '</tr>';
          $html .= '<tr>';
          $html .= '<td colspan="3" style="text-indent:10px;line-height:18px;font-size:11px;text-align:left;letter-spacing:1px;">' . $this->translate("Reason for Application") . ' ................... ' . $result['reason_for_vl_testing'] . '</td>';
          $html .= '</tr>';
          $html .= '<tr>';
          $html .= '<td colspan="3" style="text-indent:10px;line-height:18px;font-size:11px;text-align:left;letter-spacing:1px;">' . $this->translate("ART Regimen") . ' ................................ ' . $result['current_regimen'] . '</td>';
          $html .= '</tr>';



          $html .= '<tr>';
          $html .= '<td colspan="3" style="line-height:10px;"></td>';
          $html .= '</tr>';



          $html .= '<tr>';
          $html .= '<td colspan="3" style="text-indent:10px;line-height:18px;font-size:11px;text-align:left;letter-spacing:1px;">' . $this->translate("Viral Load (CAP/CTM)") . ' ................... ' . $result['result'] . ' (' . $this->translate("copies/ml") . ')</td>';
          $html .= '</tr>';
          $html .= '<tr>';
          $html .= '<td colspan="3" style="text-indent:10px;line-height:18px;font-size:11px;text-align:left;letter-spacing:1px;">' . $this->translate("Log Value") . ' ..................................... ' . $result['result_value_log'] . '</td>';
          $html .= '</tr>';

          $html .= '<tr>';
          $html .= '<td colspan="3" style="line-height:10px;"></td>';
          $html .= '</tr>';

          if (isset($result['result_approved_by']) && $result['result_approved_by'] != '') {
               $html .= '<tr>';
               $html .= '<td colspan="3" style="font-size:11px;">' . $this->translate("Authorized By") . " " . $result['result_approved_by'] . ' ' . $approvedDate . '</td>';
               $html .= '</tr>';
          }


          $html .= '<tr>';
          $html .= '<td colspan="3" style="line-height:18px;font-size:11px;text-align:center;letter-spacing:1px;"><br><br>.... ' . $this->translate("End of report") . ' ....</td>';
          $html .= '</tr>';

          $html .= '</table>';
          $pdf->writeHTML($html);
          $pdf->lastPage();
          $filename = TEMP_UPLOAD_PATH . DIRECTORY_SEPARATOR . 'p' . $page . '.pdf';
          $pdf->Output($filename, "F");
          $pages[] = $filename;
          $page++;
     }
}
if (!empty($pages)) {
     $resultPdf = new PdfConcat();
     $resultPdf->setFiles($pages);
     $resultPdf->setPrintHeader(false);
     $resultPdf->setPrintFooter(false);
     $resultPdf->concat();
     $resultFilename = 'Viral-Load-Result-' . $result['sample_code'] . '.pdf';
     $resultPdf->Output(TEMP_UPLOAD_PATH . DIRECTORY_SEPARATOR . $resultFilename, "F");
}
echo $resultFilename;
